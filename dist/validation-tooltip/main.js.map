{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/validation-label.directive.ts","webpack:///./src/app/validation-msg.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n/**\n   * Get Form content\n  */\n getFormContent() {\n  // tslint:disable-next-line:no-shadowed-variable\n const promise = new Promise((resolve, reject) => {\n   const apiURL = 'http://localhost:4200/assets/formcontent.json';\n   return this.http.get<{frcontent: any}>(apiURL).toPromise().then(\n     res => {\n       resolve(res);\n     },\n     msg => {\n       reject(msg);\n     }\n   );\n });\n return promise;\n}\n\n   /**\n   * Get Field Info message\n  */\n getFieldInfoMessage() {\n  // tslint:disable-next-line:no-shadowed-variable\n const promise = new Promise((resolve, reject) => {\n   const apiURL = 'http://localhost:4200/assets/fieldInfoContent.json';\n   return this.http.get<{vlderrors: any}>(apiURL).toPromise().then(\n     res => {\n       resolve(res);\n     },\n     msg => {\n       reject(msg);\n     }\n   );\n });\n return promise;\n}\n\n}\n","module.exports = \".globalError{\\r\\n    position: fixed;\\r\\n    width: 100%;\\r\\n    top: 0;\\r\\n    background: #ffffff;\\r\\n    text-align: center;\\r\\n}\\r\\n.globalError p{\\r\\n    margin: 10px 0;\\r\\n}\\r\\n.globalError p a{\\r\\n    font-weight: bold;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"globalError\\\" *ngIf=\\\"isGlobalError\\\">\\r\\n    <p>To register, please fill up <a href=\\\"javascript:void(0);\\\" (click)=\\\"goToField()\\\">{{errorsObj.length}}</a> fields.</p>\\r\\n</div>\\r\\n<app-register (formErrorsCount)='formErrorsEvent($event)'></app-register>\\r\\n\\r\\n\"","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  errorsObj: any;\r\n  isGlobalError = false;\r\n  globalErrorTimer: any;\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  formErrorsEvent(evt) {\r\n    this.errorsObj = evt;\r\n    console.log('formErrorsArr => ', this.errorsObj);\r\n    if (this.errorsObj.length > 0) {\r\n      this.isGlobalError = true;\r\n      window.scrollTo(0, 0);\r\n      this.globalErrorTimer = setTimeout( () => {\r\n        console.log(this.el.nativeElement.querySelector('.globalError'));\r\n        this.el.nativeElement.querySelector('.globalError').focus();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  goToField() {\r\n    console.log(this.el.nativeElement);\r\n    this.el.nativeElement.querySelector('#' + this.errorsObj[0].fieldName).focus();\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ValidationLabelDirective } from './validation-label.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    ValidationLabelDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".loader-bg {\\r\\n    position: fixed;\\r\\n    background: rgba(0, 0, 0, 0.5);\\r\\n    z-index: 1000;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n  }\\r\\n  \\r\\n  .loader {\\r\\n    border: 16px solid #FFF;\\r\\n    border-top: 16px solid #FFF;\\r\\n    border-radius: 50%;\\r\\n    width: 120px;\\r\\n    height: 120px;\\r\\n    position: absolute;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n    margin-left: -60px;\\r\\n    margin-top: -60px;\\r\\n    -webkit-animation: spin 2s linear infinite;\\r\\n            animation: spin 2s linear infinite;\\r\\n  }\\r\\n  \\r\\n  @-webkit-keyframes spin {\\r\\n    0% {\\r\\n      -webkit-transform: rotate(0deg);\\r\\n              transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n      -webkit-transform: rotate(360deg);\\r\\n              transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @keyframes spin {\\r\\n    0% {\\r\\n      -webkit-transform: rotate(0deg);\\r\\n              transform: rotate(0deg);\\r\\n    }\\r\\n    100% {\\r\\n      -webkit-transform: rotate(360deg);\\r\\n              transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .registerBox {\\r\\n    background: #FFF;\\r\\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .08);\\r\\n    border: 1px solid #eaeaea;\\r\\n    margin-top: 50px;\\r\\n    padding: 30px;\\r\\n  }\\r\\n  \\r\\n  .registerBox h3{\\r\\n      margin-bottom: 30px;\\r\\n  }\\r\\n  \\r\\n  .errorfield {\\r\\n    border-color: #dc3545;\\r\\n  }\\r\\n  \\r\\n  .errorlabel {\\r\\n    color: #dc3545;\\r\\n  }\\r\\n  \\r\\n  .fieldInfo {\\r\\n    position: absolute;\\r\\n    width: 90%;\\r\\n    padding: 5px 2%;\\r\\n    color: #fff;\\r\\n    top: -10px;\\r\\n    background: #333;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n  \\r\\n  .fieldInfo:after {\\r\\n    border-left: solid transparent 10px;\\r\\n    border-right: solid transparent 10px;\\r\\n    border-top: solid #333 10px;\\r\\n    bottom: -10px;\\r\\n    content: \\\" \\\";\\r\\n    height: 0;\\r\\n    left: 20px;\\r\\n    margin-left: -13px;\\r\\n    position: absolute;\\r\\n    width: 0;\\r\\n  }\"","module.exports = \"<div class=\\\"loader-bg\\\" *ngIf=\\\"isLoading\\\">\\n  <div class=\\\"loader\\\"></div>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"!isLoading\\\">\\n  <div class=\\\"col-xl-8 offset-xl-2 col-md-12 registerBox\\\">\\n    <h3 class=\\\"text-center\\\">{{title}}</h3>\\n    <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"verifyForm()\\\">\\n      <div class=\\\"row form-group clearfix\\\">\\n            <div class=\\\"col-md-4 col-12\\\">\\n              <label for=\\\"firstName\\\">First Name</label>\\n              <input type=\\\"text\\\" appValidationLabel\\n              id=\\\"{{formContent?.controls?.firstName}}\\\"\\n              [formControlName]=\\\"formContent?.controls?.firstName\\\"\\n              [formErrorsArr]=\\\"formErrorsArr\\\"\\n              [fieldInfo]=\\\"fieldInfoMsgArr?.firstName\\\"\\n              (formErrorsCount)='formErrorsEvent($event)'\\n              class=\\\"form-control\\\" autofocus />\\n            </div>\\n            <div class=\\\"col-md-4 col-12\\\">\\n              <label for=\\\"middleName\\\">Middle Name</label>\\n                <input type=\\\"text\\\" appValidationLabel\\n                id=\\\"{{formContent?.controls?.middleName}}\\\"\\n                [formControlName]=\\\"formContent?.controls?.middleName\\\"\\n                [formErrorsArr]=\\\"formErrorsArr\\\"\\n                [fieldInfo]=\\\"fieldInfoMsgArr?.middleName\\\"\\n                (formErrorsCount)='formErrorsEvent($event)'\\n                class=\\\"form-control\\\" />\\n            </div>\\n            <div class=\\\"col-md-4 col-12\\\">\\n              <label for=\\\"lastName\\\">Last Name</label>\\n                <input type=\\\"text\\\" appValidationLabel\\n                id=\\\"{{formContent?.controls?.lastName}}\\\"\\n                [formControlName]=\\\"formContent?.controls?.lastName\\\"\\n                [formErrorsArr]=\\\"formErrorsArr\\\"\\n                [fieldInfo]=\\\"fieldInfoMsgArr?.lastName\\\"\\n                (formErrorsCount)='formErrorsEvent($event)'\\n                class=\\\"form-control\\\" />\\n            </div>\\n      </div>      \\n      <div class=\\\"row form-group clearfix\\\">\\n          <div class=\\\"col-md-4 col-12\\\">\\n            <label for=\\\"emailId\\\">Email ID</label>\\n              <input type=\\\"text\\\" appValidationLabel\\n              id=\\\"{{formContent?.controls?.emailId}}\\\"\\n              [formControlName]=\\\"formContent?.controls?.emailId\\\"\\n              [formErrorsArr]=\\\"formErrorsArr\\\"\\n              [fieldInfo]=\\\"fieldInfoMsgArr?.emailId\\\"\\n              (formErrorsCount)='formErrorsEvent($event)'\\n              class=\\\"form-control\\\" />\\n          </div>    \\n          <div class=\\\"col-md-4 col-12\\\">\\n            <label for=\\\"mobile\\\">Mobile No</label>\\n            <input type=\\\"text\\\" appValidationLabel\\n            id=\\\"{{formContent?.controls?.mobile}}\\\"\\n            [formControlName]=\\\"formContent?.controls?.mobile\\\"\\n            [formErrorsArr]=\\\"formErrorsArr\\\"\\n            [fieldInfo]=\\\"fieldInfoMsgArr?.mobile\\\"\\n            (formErrorsCount)='formErrorsEvent($event)'\\n            class=\\\"form-control\\\" />\\n          </div> \\n          <div class=\\\"col-md-4 col-12\\\">\\n            <label for=\\\"umail\\\">Password</label>\\n            <input type=\\\"password\\\" appValidationLabel\\n            id=\\\"{{formContent?.controls?.password}}\\\"\\n            [formControlName]=\\\"formContent?.controls?.password\\\"\\n            [formErrorsArr]=\\\"formErrorsArr\\\"\\n            [fieldInfo]=\\\"fieldInfoMsgArr?.password\\\"\\n            (formErrorsCount)='formErrorsEvent($event)'\\n            class=\\\"form-control\\\" />\\n          </div>  \\n      </div>\\n      <div class=\\\"row form-group clearfix\\\">\\n        <div class=\\\"col-12 text-center\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" appFormSubmit>{{formContent?.btnName}}</button>\\n        </div>\\n      </div>  \\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, ElementRef, EventEmitter, Output, Renderer2 } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { ValidationMessageService } from '../validation-msg.service';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  isLoading: Boolean = true;\n  registerForm: FormGroup;\n  formContent = {};\n  formErrorsArr = [];\n  title: String;\n  fieldInfoMsgArr = [];\n  errors: any;\n  isFieldExit = false;\n  @Output() formErrorsCount: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private validErrorMsgService: ValidationMessageService,\n    private el: ElementRef,\n    private ren: Renderer2\n  ) {\n  }\n\n  ngOnInit() {\n    this.title = 'Register';\n    this.formContentFunc();\n    this.validationErrorMsg();\n  }\n\n  formContentFunc() {\n    this.apiService.getFormContent().then(\n      (res) => {\n        console.log(res);\n        if (res !== undefined || res !== null) {\n          this.formContent = res;\n          this.isLoading = false;\n          this.createForm();\n        }\n      }, (error) => {\n        console.log(error);\n        this.isLoading = false;\n      });\n  }\n\n  createForm() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      middleName: ['', [Validators.minLength(2), Validators.maxLength(30)]],\n      lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      emailId: ['', [Validators.required, Validators.email]],\n      mobile: ['', [Validators.required, Validators.pattern('^[0-9]*$'), Validators.minLength(10), , Validators.maxLength(10)]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  /*\n  *** Get API response as validation error json and load response in validationErrorObj of validErrorMsgService\n  */\n validationErrorMsg() {\n  this.apiService.getFieldInfoMessage().then(\n    (res) => {\n      if (this.validErrorMsgService.validationErrorObj.length === 0) {\n        this.fieldInfoMsgArr = res['fieldInfo'];\n        console.log('Field Info Array => ', this.fieldInfoMsgArr);\n        this.isLoading = false;\n      }\n    }, (error) => {\n      console.log(error);\n      this.isLoading = false;\n    });\n  }\n\n  formErrorsEvent(evt) {\n    this.errors = evt;\n  }\n\n  verifyForm() {\n    const cloneErrors = this.errors;\n    Object.keys(this.registerForm.controls).forEach(key => {\n      if (this.registerForm.get(key).invalid) {\n        this.el.nativeElement.querySelector('#' + key).classList.add('errorfield');\n        this.el.nativeElement.querySelector('#' + key).parentElement.querySelector('label').classList.add('errorlabel');\n        const obj = {fieldName: key};\n        if (cloneErrors.length > 0) {\n          for (let i = 0; i < cloneErrors.length; i++) {\n            if (cloneErrors[i].fieldName === key) {\n              this.isFieldExit = true;\n            }\n          }\n        }\n        if (!this.isFieldExit) {\n          this.errors.push(obj);\n        }\n      }\n      this.isFieldExit = false;\n    });\n    this.formErrorsCount.emit(this.errors);\n  }\n\n}\n","import { Directive, Input, Output, HostListener, ElementRef, Renderer2, EventEmitter, OnInit,\r\n  OnChanges, OnDestroy, SimpleChange } from '@angular/core';\r\nimport { NgControl, ValidationErrors } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { ValidationMessageService } from './validation-msg.service';\r\n\r\n@Directive({\r\n  selector: '[appValidationLabel]'\r\n})\r\nexport class ValidationLabelDirective implements OnInit, OnChanges {\r\n  @Input() formControlName;\r\n  @Input() formErrorsArr: any[];\r\n  @Input() fieldInfo: string;\r\n  @Output() formErrorsCount: EventEmitter<any> = new EventEmitter();\r\n  fieldAlreadyExit: Boolean;\r\n  allFields = [];\r\n\r\n\r\n  constructor(\r\n    private control: NgControl,\r\n    private elr: ElementRef,\r\n    private ren: Renderer2,\r\n    private validationMsgService: ValidationMessageService\r\n  ) { }\r\n\r\n  errorSpanId = '';\r\n  statusChangeSubscription: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.fieldAlreadyExit = false;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // if (changes.formErrorsArr) {\r\n    //   console.log(changes.formErrorsArr);\r\n    // }\r\n  }\r\n\r\n  @HostListener('focus', ['$event.target'])\r\n  onFocus(target) {\r\n\r\n  }\r\n\r\n  @HostListener('click', ['$event.target'])\r\n  onClickFocus(target) {\r\n    this.creteErrorInfoTooltip();\r\n  }\r\n\r\n  @HostListener('focusout', ['$event.target'])\r\n  onFocusOut(target) {\r\n    if (this.control.touched && this.control.invalid) {\r\n      if (this.formErrorsArr.length !== 0) {\r\n        for (let i = 0; i < this.formErrorsArr.length; i++) {\r\n          if (this.formErrorsArr[i].fieldName === this.control.name) {\r\n            this.fieldAlreadyExit = true;\r\n          }\r\n        }\r\n      }\r\n      if (!this.fieldAlreadyExit) {\r\n        const errorObj = {fieldName: this.control.name};\r\n        this.formErrorsArr.push(errorObj);\r\n      }\r\n      this.addErrorClass();\r\n    } else {\r\n      for (let i = 0; i < this.formErrorsArr.length; i++) {\r\n        if (this.formErrorsArr[i].fieldName === this.control.name) {\r\n          this.formErrorsArr.splice(i, 1);\r\n          this.removeErrorClass();\r\n        }\r\n      }\r\n    }\r\n    console.log('this.formErrorsArr => ', this.formErrorsArr);\r\n    this.formErrorsCount.emit(this.formErrorsArr);\r\n    this.removeErrorInfoTooltip();\r\n  }\r\n\r\n  creteErrorInfoTooltip() {\r\n    const parentElem = this.elr.nativeElement.parentElement;\r\n    const errorDiv = this.ren.createElement('div');\r\n    const text = this.ren.createText(this.fieldInfo);\r\n    this.ren.addClass(errorDiv, 'fieldInfo');\r\n    this.ren.appendChild(errorDiv, text);\r\n    this.ren.appendChild(parentElem, errorDiv);\r\n  }\r\n\r\n  removeErrorInfoTooltip() {\r\n    const parentElem = this.elr.nativeElement.parentElement;\r\n    const errorDiv = this.elr.nativeElement.parentElement.querySelector('.fieldInfo');\r\n    console.log(errorDiv);\r\n    if (errorDiv !== null) {\r\n      this.ren.removeChild(parentElem, errorDiv);\r\n    }\r\n  }\r\n\r\n  addErrorClass() {\r\n      const fieldElement = this.elr.nativeElement;\r\n      this.ren.addClass(fieldElement, 'errorfield');\r\n      const labelElement = this.elr.nativeElement.parentElement.querySelector('label');\r\n      this.ren.addClass(labelElement, 'errorlabel');\r\n  }\r\n\r\n  removeErrorClass() {\r\n      const fieldElement = this.elr.nativeElement;\r\n      this.ren.removeClass(fieldElement, 'errorfield');\r\n      const labelElement = this.elr.nativeElement.parentElement.querySelector('label');\r\n      this.ren.removeClass(labelElement, 'errorlabel');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ValidationMessageService {\r\n\r\n  validationErrorObj = [];\r\n\r\n  public getValidationMsg(validationId: string): string {\r\n    return this.validationErrorObj[validationId];\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}